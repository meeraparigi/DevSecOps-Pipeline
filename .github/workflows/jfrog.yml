# This file contains code to upload an artifact to JFrog
name: JFrog Upload

on:
  push:
    branches:
      - jfrog-test

jobs:
  upload-artifact:
    runs-on: ubuntu-latest

    steps:

    - name: Verify Target Folder Contains Artifacts
      run: |
        if [ -z "$(ls -A target/*.jar 2>/dev/null)" ]; then
          echo "❌ ERROR: No .jar files found in target/. Maven build may have failed."
          exit 1
        fi
        echo "✅ JAR files found:"
        ls -lh target/*.jar
        
    - name: Install JFrog CLI
      run: |
        curl -fL https://getcli.jfrog.io | sh
        sudo mv jfrog /usr/local/bin/jfrog
        chmod +x /usr/local/bin/jfrog
        echo "JFrog CLI installed successfully."

    - name: Verify JFrog CLI Installation
      run: |
        which jfrog || { echo "JFrog CLI not found in PATH!"; exit 1; }
        jfrog --version
        
    - name: Configure JFrog CLI
      env:
        JFROG_URL: ${{ secrets.JFROG_URL }}
        JFROG_USER: ${{ secrets.JFROG_USER }}
        JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
        JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
      run: |
        if [[ -n "$JFROG_TOKEN" ]]; then
          jfrog config add my-jfrog --artifactory-url="$JFROG_URL" --access-token="$JFROG_TOKEN" --interactive=false
        else
          jfrog config add my-jfrog --artifactory-url="$JFROG_URL" --user="$JFROG_USER" --password="$JFROG_PASSWORD" --interactive=false
        fi

    - name: Verify JFrog Configuration
      run: |
        jfrog config show my-jfrog

    - name: Upload Artifact to JFrog Artifactory
      run: jfrog rt upload "target/*.jar" "petfrog-repo/" --build-name=petapp-build --build-number=${{ github.run_number }}

    - name: Publish Build Info
      run: jfrog rt bp petapp-build ${{ github.run_number }}
